/*!
Stealth GeoArea
Copyright 2018 CCRi.
*/
var __extends=this&&this.__extends||function(){var a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])};return function(b,c){function d(){this.constructor=b}a(b,c),b.prototype=null===c?Object.create(c):(d.prototype=c.prototype,new d)}}();angular.module("stealth.geoarea",["ccri.area-definition","stealth.core.geo.ol3.map","stealth.core.geo.ol3.layers","stealth.geoarea.templates"]).namespace();var stealthGeoarea;!function(a){function b(a,b,c,d,e){return{restrict:"E",scope:!1,templateUrl:"stealth.geoarea/action-list.tpl.html",link:function(f,g){function h(){m(),m=null,a.un("featureschanged",j),a.un("toolstarted",j),l=n=null,f.actions=f.pick=f.openMenu=f.isMenuOpen=null,f=g=null}function i(a){a.actionFn(l)}function j(){a.getActiveFeatures().then(function(a){var c;l=a,f.actions.length=0,(c=f.actions).push.apply(c,b.getListForFeatures(a))})}function k(a){if(!f.isMenuOpen){var b,g=angular.element(a.currentTarget).offset();b=e(o)(f),f.position={top:g.top+"px",left:g.left+25+"px"},n.append(b),f.isMenuOpen=!0,d(function(){c.one("click",function(){b.remove(),f.isMenuOpen=!1})},0)}}var l,m=f.$on("$destroy",h),n=c.find("body"),o="<stealth-geoarea-action-list-menu />";f.actions=[],f.pick=i,f.openMenu=k,f.isMenuOpen=!1,j(),a.on("featureschanged",j),a.on("toolstarted",j)}}}a.ActionListDirective=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").directive("actionList",["stealth.geoarea.featureCreatorInstance","stealth.geoarea.areaActions","$document","$timeout","$compile",stealthGeoarea.ActionListDirective]).directive("actionListMenu",[function(){return{restrict:"E",templateUrl:"stealth.geoarea/action-list-menu.tpl.html"}}]);var stealthGeoarea;!function(a){function b(){function a(a,b,e,f){f=f||{},d.push(new c(a,e,b,f.onlyGeometries))}function b(a){if(0===a.length)return[];var b=a.map(function(a){return a.getGeometry().getType()});return _.filter(d,function(a){return a.supports(b)})}var d=[];return{register:a,getListForFeatures:b}}var c=function(){function a(a,b,c,d){this.actionText=a,this.actionFn=b,this.iconClass=c,this.onlyGeometries=d,this.onlyGeometries=this.onlyGeometries||null,this.iconClass=this.iconClass,d&&(this.actionFn=this.filterFeatures(b,d))}return a.prototype.supports=function(a){return!this.onlyGeometries||_.some(this.onlyGeometries,function(b){return _.includes(a,b)})},a.prototype.filterFeatures=function(a,b){return function(c){return a(_.filter(c,function(a){return _.contains(b,a.getGeometry().getType())}))}},a}();a.AreaAction=c,a.AreaActionsFactory=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").factory("areaActions",[stealthGeoarea.AreaActionsFactory]);var stealthGeoarea;!function(a){function b(a,b,c,d,e){return{restrict:"E",templateUrl:"stealth.geoarea/drawPanelToolbar.tpl.html",scope:{},link:function(a,b){a.featureCreator=e}}}a.IDrawPanelToolbarDirective=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").directive("drawPanelToolbar",["$log","$timeout","ccri.area-definition.GeneratedFeature","stealth.core.geo.ol3.format.GeoJson","stealth.geoarea.featureCreatorInstance",stealthGeoarea.IDrawPanelToolbarDirective]);var stealthGeoarea;!function(a){function b(b,c,d,e,f,g,h,i){return{restrict:"E",templateUrl:"stealth.geoarea/drawingPanel.tpl.html",scope:{isToggledOn:"="},link:function(d,j){var k=_.map(a.tools,"name");d.tools=a.tools,d.featureCreator=i,d.isToggledOn=h.name===g.getMode().name,d.toggle=function(){d.isToggledOn?g.deactivate(h.name):g.activate(h.name)},d.onClickFn=function(){d.isToggledOn||g.activate(h.name)},g.addMode(h),d.$watch("isToggledOn",function(a){a?q():p()}),d.$on("toolChanged",function(a,b){_.includes(k,b.name)&&!d.isToggledOn&&d.toggle()});var l,m,n="<stealth-geoarea-drawing-tools />",o=c.find("body"),p=function(){i.handleMapClicks=!1,i.finishActiveTool(!0),l&&l.remove(),l=null,m&&m.$destroy(),m=null},q=function(){i.handleMapClicks=!0;var a=j.offset().top-6+46;m=d.$new(),m.featureCreator=i,l=b(n)(m),o.append(l),e(function(){c.find(".drawing-ctl-box").css({top:a+4+"px",right:"4px"})}),_.each(f.getLayersReversed(),function(a){if("Drawing"===a.name&&!a.styleDirectiveScope.layerState.visible)return a.styleDirectiveScope.toggleVisibility(),!1})};angular.element(document).bind("keyup",function(a){27===a.keyCode&&null===d.featureCreator.getActiveToolName()&&(g.deactivate(h.name),d.$apply(function(){d.isToggledOn=!1}))})}}}a.tools=[{name:"coordRect",label:"Draw Rectangle",iconClass:"fa-square"},{name:"polygon",label:"Draw Polygon",iconClass:"fa-pencil"},{name:"radiusCircle",label:"Draw Circle",iconClass:"fa-circle"},{name:"mapPoint",label:"Add Point",iconClass:"fa-map-pin"},{name:"line",label:"Draw Line",iconClass:"fa-arrows-h"},{name:"bufferFeature",label:"Existing Feature",iconClass:"fa-crosshairs"},{name:"mapView",label:"Map View Extent",iconClass:"fa-arrows-alt"},{name:"wholeEarth",label:"Whole Earth",iconClass:"fa-globe"},{name:"textVector",label:"Add Text",iconClass:"fa-font"}],a.DrawingDirective=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").directive("drawing",["$compile","$document","$rootScope","$timeout","ol3Map","stealth.core.geo.controls.mapMode.modeManager","stealth.geoarea.drawMode","stealth.geoarea.featureCreatorInstance",stealthGeoarea.DrawingDirective]);var stealthGeoarea;!function(a){function b(a){function b(b){a.when(b).then(function(a){d.resolve(a)})}function c(){return d.promise}var d=a.defer();return{setLayer:b,getLayer:c}}a.drawingLayerRefServiceFactory=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").factory("drawingLayerRef",["$q",stealthGeoarea.drawingLayerRefServiceFactory]),angular.module("stealth.geoarea").directive("drawingPopup",[function(){return{restrict:"E",scope:{response:"=",record:"=",index:"="},controller:"stealth.geoarea.drawingPopupController",templateUrl:"stealth.geoarea/drawingPopup.tpl.html"}}]).controller("drawingPopupController",["$scope","$element","stealth.geoarea.areaActions",function(a,b,c){function d(a){var b=c.getListForFeatures([a]);return b.map(function(a){return{tooltipText:a.actionText,iconClass:a.iconClass||"",onClick:function(b){a.actionFn([b])}}})}a.name=a.response.name,a.capabilities=d(a.record),b.on("$destroy",function(){a.$destroy()});var e,f=_.get(a.record.get("toolProperties"),"originalGeometry");e=f?(new ol.format.WKT).writeGeometry(f):(new ol.format.WKT).writeFeature(a.record),a.wkt=e}]);var stealthGeoarea;!function(a){function b(b,c,d){return{restrict:"E",templateUrl:"stealth.geoarea/drawingWidget.tpl.html",link:function(e){e.toolControlsConfig={radiusCircle:!0,polygon:!0,mapPoint:!0,line:!0,bufferFeature:!0,mapView:!0,coordRect:!0,textVector:!0,wholeEarth:!0},e.featureCreator=c,e.tools=a.tools,e.close=function(){d.deactivate("Draw")},b("ccri.area-definition.ToolSelectorCtrl",{$scope:e}),e.selectedTool=_.find(e.tools,function(a){return a.name===e.featureCreator.getActiveToolName()})}}}a.DrawingToolsDirective=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").directive("drawingTools",["$controller","stealth.geoarea.featureCreatorInstance","stealth.core.geo.controls.mapMode.modeManager",stealthGeoarea.DrawingToolsDirective]);var stealthGeoarea;!function(a){function b(a){var b=new a({supportedTools:["coordRect","polygon","radiusCircle","line","mapPoint","textVector","bufferFeature","mapView","wholeEarth"],addLayerToMap:!1});return b}a.FeatureCreatorInstanceFactory=b}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea").factory("featureCreatorInstance",["ccri.area-definition.FeatureCreator",stealthGeoarea.FeatureCreatorInstanceFactory]),angular.module("stealth.geoarea",["stealth.display"]).constant("drawMode",{name:"Draw",iconClass:"fa-pencil"}).run(["$q","$rootScope","ccri.angular-utils.WidgetDef","ccri.bars.mgr","ccri.bars.Widget","clickSearchHelper","ol3Map","stealth.core.geo.ol3.layers.MapLayer","stealth.display.registry","stealth.geoarea.areaActions","stealth.geoarea.drawingLayerRef","stealth.geoarea.drawMode","stealth.geoarea.featureCreatorInstance",function(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=m.getCompositeLayer();k.setLayer(n);var o=new h("DrawingLayer","Drawing",n,!0,10);o.searchPoint=function(b,c){var d=f.getSearchExtent(b,c,null),e=[];return n.getSource().forEachFeatureIntersectingExtent(d,function(a){e.push(a)}),a.when({name:"Drawn area",isError:!1,records:f.sortAndTrimFeatures(b,e)})},o.popupOptions.directive="stealth-geoarea-drawing-popup",o.popupOptions.type="tabs",o.popupOptions.iconClass="fa fa-fw fa-lg fa-pencil",o.popupOptions.onTabFocus=function(a){m.addSelectedFeatures([a])},o.popupOptions.onTabBlur=function(a){m.removeSelectedFeatures([a])},g.addLayer(o,0);var p=b.$new();b.$on("map.mode.activated",function(a,b){l.name!==b.name||p.isToggledOn||(p.isToggledOn=!0)}),b.$on("map.mode.deactivated",function(a,b){l.name===b.name&&p.isToggledOn&&(p.isToggledOn=!1)});var q=[new e({widget:new c({tag:"ccri-bars-separator",scope:b.$new()})}),new e({widget:new c({tag:"stealth-geoarea-drawing",scope:p,attrs:'is-toggled-on="isToggledOn"'})})],r=stealthGeoarea.State.StateService.getInstance();b.$watch(function(){return r.savedStateAvailable},function(a,b){a&&s()}),r.listenForSavedState();var s=function(){var a=r.getSavedState();m.addFeatures(a)};b.$on("SaveState",function(){m.getFeatures().then(function(a){r.dispatchWriteLayer(a)})});_.each(q,function(a){d.insert("top",a,ccriBars.Position[ccriBars.Position.Last],"600"),i.on("display.selected",function(b){"map"===b.type&&(a.hidden=!b.selected)})})}]);var stealthGeoarea;!function(a){var b;!function(b){function c(){return new f}var d=function(a){function b(b){var c=this;return c=b?a.call(this,b)||this:a.call(this)||this}return __extends(b,a),b.prototype.with=function(a){return this.merge(a)},b}(Immutable.Record({settings:{}},"DrawRecord"));b.DrawLayerRecord=d;var e;!function(a){a.ADD_LAYER="ADD_LAYER"}(e=b.TypeKeys||(b.TypeKeys={}));var f=function(){function b(){this.stateManager=AppState.StateManager.getInstance(),this.geoJSONFormatter=new ol.format.GeoJSON,this.layerCount=0,this.stateAdded=!1,this.savedStateAvailable=!1,this.stateManager.addReducers({drawLayer:this.drawLayer}),this.stateManager.addRecord(d)}return b.getInstance=function(){return this.instance},b.prototype.dispatchWriteLayer=function(a){this.stateAdded=!0,this.stateManager.dispatch(this.writeLayer(a))},b.prototype.dispatchAddNewLayer=function(a){this.stateAdded=!0,this.stateManager.dispatch(this.addNewLayer(a))},b.prototype.listenForSavedState=function(){var a=this;this.stateManager.getObservable("drawLayer.settings.layer").subscribe({next:function(){a.savedStateAvailable=!0}})},b.prototype.getSavedState=function(){if(this.savedStateAvailable=!1,!this.stateAdded){var a=this.stateManager.getState("drawLayer.settings.layer"),b=this.geoJSONFormatter.readFeatures(a),c=[];return b.forEach(function(a){c=c.concat(CreateFeatures.GeneratedFeature.fromFeature(a))}),c}},b.prototype.writeLayer=function(a){var b=this.geoJSONFormatter.writeFeatures(a);return{type:e.ADD_LAYER,settings:new Immutable.Map({layer:b})}},b.prototype.addNewLayer=function(a,b){var c=this;void 0===b&&(b="layer");var d,f=_.map(a,function(a){return c.geoJSONFormatter.writeFeatureObject(a)});return{type:e.ADD_LAYER,settings:new Immutable.Map((d={},d[b+this.layerCount++]=f,d))}},b.prototype.drawLayer=function(b,c){switch(void 0===b&&(b=new a.State.DrawLayerRecord),c.type){case e.ADD_LAYER:var d=new Immutable.Map(b.settings);return b.with({settings:d.mergeDeep(c.settings)});default:return b}},b.instance=new b,b}();b.StateService=f,b.stateService=c}(b=a.State||(a.State={}))}(stealthGeoarea||(stealthGeoarea={})),angular.module("stealth.geoarea.templates",[]).run(["$templateCache",function(a){a.put("stealth.geoarea/action-list-menu.tpl.html",'<div class="action-list-menu" ng-style="position">\n    <ul class="list-unstyled">\n        <li ng-repeat="action in actions" class="action-item clickable"\n            ng-click="pick(action)">\n            <i class="fa fa-fw" ng-class="action.iconClass"></i>\n            <span class="action-text">{{action.actionText}}</span>\n        </li>\n    </ul>\n</div>\n'),a.put("stealth.geoarea/action-list.tpl.html",'<!-- The action list is the list of potential actions a user can take after drawing shapes -->\n<div class="geoarea-action-list" ng-class="{\'ng-hide\' : actions.length == 0}"\n    ng-switch="actions.length > 3">\n    <div ng-switch-when="true">\n        <span class="menu-button" ng-class="{\'menu-open\' : isMenuOpen}"\n            ng-click="openMenu($event)"\n            uib-tooltip="Use drawn area" tooltip-class="nowrap"\n            tooltip-placement="left" tooltip-animation="true"\n            tooltip-popup-delay="600" tooltip-trigger="mouseenter">\n            <i class="fa fa-2x fa-ellipsis-h"></i>\n        </span>\n    </div>\n    <div class="listing-container" ng-switch-default>\n        <div class="text-btn" ng-repeat="action in actions" ng-click="pick(action)">\n            <i class="fa fa-lg" ng-class="action.iconClass"></i>\n            <span class="action-text">{{action.actionText}}</span>\n        </div>\n    </div>\n</div>\n'),a.put("stealth.geoarea/drawPanelToolbar.tpl.html",'<!-- Drawing control buttons -- Save, Open, Erase, Select mode -->\n<span>\n\n    <!-- Save to File -->\n    <ccri-area-definition-save-button feature-creator="featureCreator" icon-class="fa-lg fa-save"\n            class="btn-group" ng-class="{\'ng-hide\': !$parent.isToggledOn}"\n            toggle-class="btn action-btn bar-btn dropdown-toggle bar-color2"\n            menu-class="dropdown-menu-right bar-dropdown"\n            uib-tooltip="Save to file" tooltip-class="nowrap"\n            tooltip-placement="left" tooltip-animation="true" tooltip-popup-delay="600"\n            tooltip-trigger="mouseenter"\n    ></ccri-area-definition-save-button>\n\n    <!-- Upload -->\n    <ccri-area-definition-upload-button feature-creator="featureCreator" icon-class="fa-lg fa-folder-open"\n            class="btn action-btn bar-btn bar-color2"\n            ng-class="{\'ng-hide\': !$parent.isToggledOn}"\n            uib-tooltip="Load from file" tooltip-class="nowrap"\n            tooltip-placement="bottom-left" tooltip-animation="true"\n            tooltip-popup-delay="600" tooltip-trigger="mouseenter"\n            tooltip-class="inspect-tooltip"\n    ></ccri-area-definition-upload-button>\n\n    <!-- Erase all -->\n    <ccri-area-definition-erase-button feature-creator="featureCreator" icon-class="fa-lg fa-eraser"\n            class="btn action-btn bar-btn bar-color2"\n            ng-class="{\'ng-hide\': !$parent.isToggledOn}"\n            uib-tooltip="Erase All" tooltip-class="nowrap"\n            tooltip-placement="bottom-right" tooltip-animation="true"\n            tooltip-popup-delay="600" tooltip-trigger="mouseenter"\n            tooltip-class="inspect-tooltip"\n    ></ccri-area-definition-erase-button>\n\n    <!-- Enter Select mode -->\n    <ccri-area-definition-select-button feature-creator="featureCreator" icon-class="fa-lg fa-pencil-square-o"\n            class="btn action-btn bar-btn bar-color2"\n            disable-when-empty="false"\n            ng-class="{\'ng-hide\': !$parent.isToggledOn}"\n            uib-tooltip="Select" tooltip-class="nowrap"\n            tooltip-placement="bottom-right" tooltip-animation="true"\n            tooltip-popup-delay="600" tooltip-trigger="mouseenter"\n            tooltip-class="inspect-tooltip"\n    ></ccri-area-definition-select-button>\n\n</span>\n'),a.put("stealth.geoarea/drawingPanel.tpl.html",'<div style="display: inline-block;">\n    <stealth-geoarea-draw-panel-toolbar>\n    </stealth-geoarea-draw-panel-toolbar>\n</div>\n<div style="display: inline-block;">\n    <ccri-area-definition-drawtool-selector\n            feature-creator="featureCreator"\n            only-show-tool-icon-on-button="true"\n            on-click-fn="onClickFn"\n            first-tool-idx="0"\n            class="tool-selector">\n    </ccri-area-definition-drawtool-selector>\n</div>\n'),a.put("stealth.geoarea/drawingPopup.tpl.html",'<div class="stealth-geoarea-drawn-area">\n    <div class="flex-row" style="text-align:center;" ng-style="highlight">\n        <div ng-repeat="capa in capabilities"\n             style="padding:1px;"\n             class="btn action-btn"\n             uib-tooltip="{{capa.tooltipText}}" tooltip-class="nowrap"\n             tooltip-placement="top" tooltip-animation="false" tooltip-popup-delay="500"\n             ng-if="capa.onClick"\n             ng-click="capa.onClick(record)">\n            <i class="fa fa-fw" ng-class="capa.iconClass" style="color:#b5b5b5;"></i>\n        </div>\n        <ccri-angular-utils-close-btn\n             style="padding:1px;"\n             ng-if="$parent.$parent.removeTab && $parent.$parent.tabs.length > 1"\n             ng-click="$parent.$parent.removeTab($parent.$parent.tab)">\n        </ccri-angular-utils-close-btn>\n    </div>\n    <div class="flex-row">\n        <div class="wkt-container">\n            {{::wkt}}\n        </div>\n        <div class="buf-lg-mt buf-lg-mr">\n            <ccri-angular-utils-clipboard-copy ccri-angular-utils-clipboard-feedback class="control-btn icon-btn" data-clipboard-text="{{::wkt}}" ccri-angular-utils-clipboard-feedback>\n            <i class="fa fa-clipboard"></i>\n            </ccri-angular-utils-clipboard-copy>\n        </div>\n    </div>\n</div>\n'),a.put("stealth.geoarea/drawingWidget.tpl.html",'<div class="drawing-ctl-box">\n    <div class="drawing-box-header flex-row flex-justify-content-space-between flex-align-items-baseline">\n        <ccri-area-definition-drawtool-selector\n                feature-creator="featureCreator"\n                class="tool-selector">\n        </ccri-area-definition-drawtool-selector>\n        <span\n                ng-class="{\'ng-hide\' : selectedTool === null}">\n            <ccri-area-definition-more-details-toggle>\n            </ccri-area-definition-more-details-toggle>\n        </span>\n        <ccri-angular-utils-close-btn\n                ng-click="close()">\n        </ccri-angular-utils-close-btn>\n    </div>\n\n    <ccri-area-definition-tool-controls-switcher\n            feature-creator="featureCreator"\n            tool-controls="toolControlsConfig">\n    </ccri-area-definition-tool-controls-switcher>\n\n    <!-- The Action List - buttons for the user to take actions with the active shape -->\n    <stealth-geoarea-action-list>\n    </stealth-geoarea-action-list>\n</div>\n')}]);