<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <context-param>
        <param-name>org.scalatra.LifeCycle</param-name>
        <param-value>com.ccri.commons.scalatra.webapp.ScalatraBootstrap</param-value>
    </context-param>

    <listener>
        <listener-class>org.scalatra.servlet.ScalatraListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>CorsProxy</servlet-name>
        <servlet-class>com.ccri.commons.war.cors.CorsProxyServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>idleTimeout</param-name>
            <param-value>600000</param-value>
        </init-param>
        <init-param>
            <param-name>timeout</param-name>
            <param-value>1200000</param-value>
        </init-param>
        <init-param>
            <param-name>connectTimeout</param-name>
            <param-value>600000</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>CorsProxy</servlet-name>
        <url-pattern>/cors/*</url-pattern>
    </servlet-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:appContext.xml,classpath:spring-security.xml</param-value>
    </context-param>

    <context-param>
        <param-name>contextInitializerClasses</param-name>
        <param-value>com.ccri.commons.war.config.TypesafeConfigPropertySourceInitializer</param-value>
    </context-param>

    <!-- This is used by the TypesafeWebappConfig provided by commons-war-config -->
    <context-param>
        <param-name>appName</param-name>
        <param-value>stealth</param-value>
    </context-param>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    
</web-app>
